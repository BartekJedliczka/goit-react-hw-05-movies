{"version":3,"file":"static/js/164.d433dee3.chunk.js","mappings":"8MAEaA,EAAU,mCAAG,WAAOC,EAAMC,EAAOC,GAApB,uFACDC,EAAAA,EAAAA,IAAA,uCAA0CH,GAAQ,CACvEI,OAAQ,MACRC,OAAQ,CACNC,QAAS,mCACTL,MAAOA,EACPC,KAAMA,KANc,cAClBK,EADkB,yBAUjBA,EAASC,MAVQ,2CAAH,yD,2GCDvB,EAAuB,mBAAvB,EAAgD,kBAAhD,EAAgF,0B,SCoDhF,EAhDa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IANAE,EAAAA,EAAAA,YAAU,YACRf,EAAAA,EAAAA,GAAW,SAAD,OAAUa,EAAV,aACPG,MAAK,SAAAP,GAAI,OAAIG,EAAQH,EAAKE,KAAjB,IACTM,MAAMC,QAAQC,IAClB,GAAE,CAACN,IAECF,EAIL,OACE,8BACGA,EAAKS,OAAS,GACb,wBACGT,EAAKU,MAAM,EAAG,IAAIC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACrB,gBAAaC,UAAWC,EAAxB,UACGF,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAKN,EACLG,UAAWC,EACXG,MAAM,SAGR,gBAAKJ,UAAWC,EAAhB,8BAEF,4BACE,wBACE,uBAAIJ,OAEN,wCACa,uBAAIC,YAhBZF,EADY,OAwBzB,uCAIP,C","sources":["api/api.js","webpack://react-homework-template/./src/pages/Movies/Cast/Cast.module.css?5614","pages/Movies/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchMovie = async (path, query, page) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/${path}`, {\n    method: 'get',\n    params: {\n      api_key: 'c69fb8daa91af9db5bc79adaff004050',\n      query: query,\n      page: page,\n    },\n  });\n\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Cast_item__PnSVd\",\"img\":\"Cast_img__XGMPG\",\"imgNotFound\":\"Cast_imgNotFound__XpV0E\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovie } from '../../../api/api';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovie(`movie/${movieId}/credits`)\n      .then(data => setCast(data.cast))\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.slice(0, 19).map(({ id, name, character, profile_path }) => (\n            <li key={id} className={css.item}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  className={css.img}\n                  width=\"100\"\n                />\n              ) : (\n                <div className={css.imgNotFound}>Image not found</div>\n              )}\n              <div>\n                <p>\n                  <b>{name}</b>\n                </p>\n                <p>\n                  Character: <b>{character}</b>\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>No casts</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["fetchMovie","path","query","page","axios","method","params","api_key","response","data","useState","cast","setCast","movieId","useParams","useEffect","then","catch","console","log","length","slice","map","id","name","character","profile_path","className","css","src","alt","width"],"sourceRoot":""}